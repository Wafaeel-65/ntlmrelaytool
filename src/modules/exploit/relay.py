from src.modules.exploit.ntlmrelayserver import NTLMRelayServer
import logging
import socket

# Configure logging
# Change level to DEBUG to see more detailed logs
logging.basicConfig(level=logging.DEBUG, format='%(asctime)s - %(levelname)s - %(name)s - %(message)s')
logger = logging.getLogger(__name__)

class Relay:
    def __init__(self, interface='0.0.0.0', port=8445):
        self.interface = interface
        self.port = port
        self.server = None
        self.running = False
        self.logger = logging.getLogger(__name__)

    def set_target(self, target):
        """Set the target for NTLM relay"""
        if not self.server:
            self.server = NTLMRelayServer(self.interface, self.port)
        self.server.set_target(target)

    def start_relay(self, target=None):
        """Start the relay server with an optional target"""
        try:
            # Initialize server if not done
            if not self.server:
                self.server = NTLMRelayServer(self.interface, self.port)

            # Set or update target
            if target:
                self.set_target(target)
            elif not self.server.target:
                raise ValueError("Target must be specified")

            # Start the server
            self.server.start()
            self.running = True

        except (socket.error, ConnectionError) as e:
            self.logger.error(f"Network error: {e}")
            raise
        except Exception as e:
            self.logger.error(f"Failed to start relay: {e}")
            raise

    def stop_relay(self):
        """Stop the relay server"""
        try:
            if self.server:
                self.server.stop()
            self.running = False
        except Exception as e:
            self.logger.error(f"Failed to stop relay: {e}")
            raise
